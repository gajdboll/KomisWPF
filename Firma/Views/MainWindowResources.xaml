<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vm="clr-namespace:Komis.ViewModels"
                    xmlns:vw="clr-namespace:Komis.Views"
                    >

    <!--tu bedziemy laczyc View z ViewModel zakładek-->
   
    <DataTemplate DataType="{x:Type vm:WszystkieSamochodyViewModel}">
        <vw:WszystkieSamochodyView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:NowySamochodViewModel}">
        <vw:NowySamochodView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:NowaFakturaViewModel}">
        <vw:NowaFakturaView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:WszystkieFakturyViewModel}">
        <vw:WszystkieFakturyView/>
    </DataTemplate>
    
    <DataTemplate DataType="{x:Type vm:NowyKontrahentViewModel}">
        <vw:NowyKontrahentView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:WszyscyKontrahenciViewModel}">
        <vw:WszyscyKontrahenciView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:NoweUbezpieczenieViewModel}">
        <vw:NoweUbezpieczenieView/>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vm:WszystkieUbezpieczeniaViewModel}">
        <vw:WszystkieUbezpieczeniaView/>
    </DataTemplate>
    
    <Style x:Key="MainHCCStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                    <DockPanel>
                        <ContentPresenter 
              DockPanel.Dock="Top"
              ContentSource="Header" 
              ContentTemplate="{TemplateBinding HeaderTemplate}" 
              />
                        <ContentPresenter 
              ContentSource="Content" 
              ContentTemplate="{TemplateBinding ContentTemplate}" 
              />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="Yellow" />
        <Setter Property="BorderBrush" Value="Yellow" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <Style x:Key="NewMenuButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="LightGray"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="15,10,15,10"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border  CornerRadius ="3" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Azure"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Key="NewMenuTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="0,6,0,0" Background="#242424">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Style="{StaticResource NewMenuButtonStyle}" Command="{Binding Path=Command}" >
                        <StackPanel Orientation="Horizontal">
                            <Image>
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Source" Value="{Binding IconUrl}"/>
                                        <Setter Property="Width" Value="25"/>
                                        <Setter Property="Margin" Value="0,0,10,0"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button, AncestorLevel=1}, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Source" Value="{Binding IconHoverUrl}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>
                            <TextBlock Text="{Binding DisplayName}"/>
                        </StackPanel>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <Style x:Key="NewSideMenuStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="Background" Value="LightBlue"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Padding" Value="10,10,10,10"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="FloralWhite"/>
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="SideMenuTemplate">
        <ItemsControl IsTabStop="False" ItemsSource="{Binding}" Margin="0,6,0,0" Background="#242424">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Style="{StaticResource NewSideMenuStyle}" Command="{Binding Path=Command}" >
                        <StackPanel Orientation="Vertical">
                            <Image>
                                <Image.Style>
                                    <Style TargetType="{x:Type Image}">
                                        <Setter Property="Source" Value="{Binding IconUrl}"/>
                                        <Setter Property="Width" Value="25"/>
                                        <Setter Property="Margin" Value="0,0,5,0"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Button, AncestorLevel=1}, Path=IsMouseOver}" Value="True">
                                                <Setter Property="Source" Value="{Binding IconHoverUrl}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                            </Image>

                        </StackPanel>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>


   
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="120">
            <Button 
        Command="{Binding Path=CloseCommand}"
        Content="X"
        Cursor="Hand"
        DockPanel.Dock="Right"
        Focusable="False"
        FontFamily="Courier" 
        FontSize="9"
        FontWeight="Bold"  
        Margin="0,1,0,0"
        Padding="0"
        VerticalContentAlignment="Bottom"
        Width="16" Height="16" 
        />
            <ContentPresenter 
        Content="{Binding Path=DisplayName}" 
        VerticalAlignment="Center" 
        />
        </DockPanel>
    </DataTemplate>

 
    <DataTemplate x:Key="WorkspacesTemplate">
        <TabControl 
      IsSynchronizedWithCurrentItem="True" 
      ItemsSource="{Binding}" 
      ItemTemplate="{StaticResource ClosableTabItemTemplate}"
      Margin="4"
      />
    </DataTemplate>

    <Style x:Key="StatusBarStyle" TargetType="{x:Type StatusBar}">
        <Setter Property="Background" Value="Brown"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>
    <ControlTemplate x:Key="MyMenuItemTemplateKey" TargetType="MenuItem">
        <Grid Name="Border" Height="25">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="32" SharedSizeGroup="Icon"/>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                <ColumnDefinition Width="13"/>
            </Grid.ColumnDefinitions>
            <Border Name="BorderIcon" Grid.Column="0" BorderBrush="Red" BorderThickness="0,0,1,0">
                <ContentPresenter Name="Icon" Margin="5,0,5,0" VerticalAlignment="Center" ContentSource="Icon"/>
            </Border>
            <ContentPresenter Name="HeaderHost" Grid.Column="1" ContentSource="Header" Margin="5,0,0,0" VerticalAlignment="Center" RecognizesAccessKey="True"/>
            <TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="10,2,2,2" VerticalAlignment="Center" DockPanel.Dock="Right" />
            <Border Name="BorderChecked" Grid.Column="3" CornerRadius="2" Background="Transparent" Margin="5,2,5,2"/>
            <Border Name="BorderDisable" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="Transparent"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="Blue"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="BorderChecked" Property="Background" Value="Green"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="BorderDisable" Property="Background" Value="#3FFFFFFF"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MyMenuItemStyle" TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FontFamily" Value="Verdana"/>
        <Setter Property="FontSize" Value="8.5pt"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource MyMenuItemTemplateKey}"/>
            </Trigger>

            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource MyMenuItemTemplateKey}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="Green"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="MenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="Azure"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Height" Value="30"/>
    </Style>

    <Style x:Key="MenuGlowne" TargetType="{x:Type Menu }">
        <Setter Property="Background" Value="Azure"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Foreground" Value="DarkBlue"/>
    </Style>
    
</ResourceDictionary>